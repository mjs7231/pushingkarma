{"version":3,"sources":["particles.js","init.js"],"names":[],"mappingsfile":"pushingkarma.js","sourcesContent":["/*----------------------------------------------------------\n * Copyright (c) 2015 PushingKarma. All rights reserved.\n *------------------------------------------------------- */\n'use strict';\n\n(function($) {\n\n    $(function() {\n        var canvas = $(\"#particles\");\n        var ctx = canvas.get()[0].getContext(\"2d\");\n        var header = canvas.parent();\n        var width = 10;\n        var height = 10;\n        var particles = [];\n\n        // Particle Object\n        var Particle = function() {\n            this.x = Math.random() * width;\n            this.y = Math.random() * height;\n            this.radius = 1;\n            this.color = \"255,255,255\";\n            this.opacity = (Math.random() * 0.4) + 0.2;\n            this.direction = Math.floor(Math.random() * Math.PI*2);\n            this.speed = null;\n            this.turnin = null;\n\n            this.init = function() {\n                this.setSpeed();\n                this.setTurns();\n                return this;\n            };\n            this.checkBoundries = function() {\n                if (this.x < - 5) this.x = width + 5;\n                if (this.y < - 5) this.y = height + 5;\n                if (this.x > width + 5) this.x = - 5;\n                if (this.y > height + 5) this.y = - 5;\n            };\n            this.decrimentTurn = function() {\n                this.turnin -= 1;\n                if (this.turnin < 0) {\n                    this.updateDirection();\n                    this.setSpeed();\n                    this.setTurns();\n                }\n            };\n            this.draw = function() {\n                ctx.beginPath();\n                var gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.radius);\n                gradient.addColorStop(0, \"rgba(\"+this.color+\",\"+this.opacity+\")\");\n                gradient.addColorStop(1, \"rgba(\"+this.color+\",0)\");\n                ctx.fillStyle = gradient;\n                ctx.arc(this.x, this.y, this.radius, Math.PI*2, false);\n                ctx.fill();\n            };\n            this.setSpeed = function() { this.speed = (Math.random() * 0.3) + 0.1; };\n            this.setTurns = function() { this.turnin = Math.floor(Math.random() * 80) + 20; };\n            this.updateDirection = function() { this.direction += Math.random() * 0.5 * (Math.random()>0.5 ? 1:-1); };\n            this.updatePosition = function() {\n                this.x += Math.cos(this.direction) * this.speed;\n                this.y += Math.sin(this.direction) * this.speed;\n                this.checkBoundries();\n                this.decrimentTurn();\n            };\n        };\n\n        // Update the canvas size\n        var updateCanvasSize = function() {\n            var newWidth = Math.floor(header.width() / 2);\n            var newHeight = Math.floor(header.height() / 2);\n            if ((newWidth != width) || (newHeight != height) && (newHeight < 200)) {\n                width = newWidth;\n                height = newHeight;\n                canvas.attr(\"width\", width);\n                canvas.attr(\"height\", height);\n                canvas.css({width:(width*2)+\"px\", height:(height*2)+\"px\"});\n            }\n        };\n\n        // Animate the Particles\n        var drawParticles = function() {\n            updateCanvasSize();\n            ctx.clearRect(0, 0, width, height);\n            ctx.globalCompositeOperation = \"lighter\";\n            for (var i=0; i<particles.length; i++) {\n                var particle = particles[i];\n                particle.draw();\n                particle.updatePosition();\n            }\n        };\n\n        // Return True if Canvas works\n        function isCanvasSupported() {\n            var elem = document.createElement(\"canvas\");\n            return !!(elem.getContext && elem.getContext(\"2d\"));\n        }\n\n        // Create an array or particles\n        if (isCanvasSupported()) {\n            updateCanvasSize();\n            var numparticles = Math.floor(width / 40);\n            for (var i=0; i<numparticles; i++) { particles.push(new Particle().init()); }\n            setInterval(drawParticles, 30);\n        }\n    });\n\n})(window.jQuery);\n","/*----------------------------------------------------------\n * Copyright (c) 2015 PushingKarma. All rights reserved.\n *------------------------------------------------------- */\n'use strict';\n\n(function() {\n    // Register Tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip({delay:{show:200, hide:50}});\n    console.log('TOOLTIPS!');\n\n    // Apply Prettyprint to code blocks\n    //$('.content pre').prettyPrint();\n})(); \n"],"sourceRoot":"/source/"}